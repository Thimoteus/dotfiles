"package manager
set nocompatible
filetype off

call plug#begin('~/.nvim/plugged')

Plug 'gmarik/vundle'
Plug 'tpope/vim-surround'
Plug 'chriskempson/base16-vim'
Plug 'raichoo/purescript-vim'
Plug 'Thimoteus/vim-purescriptConceal'
Plug 'bling/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'edkolev/promptline.vim'
Plug 'morhetz/gruvbox'
Plug 'frigoeu/psc-ide-vim'
Plug 'whatyouhide/vim-gotham'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-repeat'
Plug 'airblade/vim-gitgutter'
Plug 'Twinside/vim-haskellConceal'
"Plug 'scrooloose/syntastic'
"Plug 'edkolev/tmuxline.vim'
"Plug 'itchyny/lightline.vim'
"Plug 'ap/vim-buftabline'
"Plug 'terryma/vim-multiple-cursors'
"Plug 'bling/vim-bufferline'
"Plug 'Thimoteus/vim-slime'
"Plug 'idris-hackers/idris-vim'
"Plug 'travitch/hasksyn'

call plug#end()

"highlighting
syntax on
filetype plugin indent on

" POSIX compatibility
set shell=/bin/bash

"colorscheme
"let base16colorspace=256  " Access colors present in 256 colorspace
set background=dark
colorscheme gruvbox

" annoying
map <C-p> <Nop>

" tab switching
nnoremap <M-h> :bp<cr>
nnoremap <M-l> :bn<cr>

" copy+paste
"vnoremap <C-x> "+x
"vnoremap <C-c> "+y
" vnoremap <C-p> "+p

" writing when you forgot sudo
command W w !sudo tee % > /dev/null

" destroy tabs -- conflicts with moving focus from pane to pane
" nnoremap <C-w> :bd<cr>

"displays line numbers
"set number

"shows which line the cursor is on
set cursorline

"lets you open new buffers without writing changes to old ones
set hidden

"tab settings
set tabstop=2
set shiftwidth=2
set expandtab

" Tab completion
function! Inserttabwrapper()
  let col = col('.') - 1
  if !col || getline('.')[col - 1] !~ '\k'
    return "\<tab>"
  else
    return "\<c-p>"
  endif
endfunction
" Map <tab> to Inserttabwrapper()
inoremap <tab> <c-r>=Inserttabwrapper()<cr>

" shows lightline
set laststatus=2

" annoying paste indent fix
set copyindent

" visible line for wrapping
" 253 for light, 233/236 for dark
highlight ColorColumn ctermbg=236
set colorcolumn=80
hi CursorLine ctermbg=236 ctermfg=NONE guibg=#ffffff guifg=NONE cterm=NONE gui=NONE

" makes split windows default to the right
set splitright

" disable highlighting search terms with space
:nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>

" markdown highlighting
let g:markdown_fenced_languages = ['purescript']

" syntax highlighting
au BufRead,BufNewFile *.sand set filetype=clojure
augroup markdown
    au!
    au BufNewFile,BufRead *.md,*.markdown,*.litps setlocal filetype=markdown
augroup END

" vim-slime
let g:slime_target="tmux"

" invisibles
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<
nnoremap <Leader>i :set list!<cr>

" airline
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_tabs = 1
let g:airline#extensions#tabline#buffer_idx_mode = 1
let g:airline#extensions#whitespace#enabled = 1
let g:airline_theme = "gruvbox"
nmap <M-1> <Plug>AirlineSelectTab1
nmap <M-2> <Plug>AirlineSelectTab2
nmap <M-3> <Plug>AirlineSelectTab3
nmap <M-4> <Plug>AirlineSelectTab4
nmap <M-5> <Plug>AirlineSelectTab5
nmap <M-6> <Plug>AirlineSelectTab6
nmap <M-7> <Plug>AirlineSelectTab7
nmap <M-8> <Plug>AirlineSelectTab8
nmap <M-9> <Plug>AirlineSelectTab9
"gruvbox

" purescript remaps
au FileType purescript nnoremap <Leader>t :PSCIDEtype<CR>
au FileType purescript nnoremap <Leader>a :PSCIDEapplySuggestion<CR>

" abbreviations
au FileType purescript iabbrev forallf ∀
au FileType purescript iabbrev <<<f ∘
au FileType purescript iabbrev *f ×
au FileType purescript iabbrev &&f ∧
au FileType purescript iabbrev \|\|f ∨
au FileType purescript iabbrev elemf ∈
au FileType purescript iabbrev notElemf ∉
au FileType purescript iabbrev notEqf ≠
au FileType purescript iabbrev ltef ≤
au FileType purescript iabbrev gtef ≥
au FileType purescript iabbrev =>f ⇒
au FileType purescript iabbrev ->f →
au FileType purescript iabbrev <=f ⇐
au FileType purescript iabbrev <-f ←

" for concealing
set concealcursor=

if &term =~ "xterm\\|rxvt"
  " use an orange cursor in insert mode
  let &t_SI = "\<Esc>]12;orange\x7"
  " use a red cursor otherwise
  let &t_EI = "\<Esc>]12;red\x7"
  silent !echo -ne "\033]12;red\007"
  " reset cursor when vim exits
  autocmd VimLeave * silent !echo -ne "\033]112\007"
  " use \003]12;gray\007 for gnome-terminal and rxvt up to version 9.21
endif

if &term =~ '^xterm\\|rxvt'
  " solid underscore
  let &t_SI .= "\<Esc>[4 q"
  " solid block
  let &t_EI .= "\<Esc>[2 q"
  " 1 or 0 -> blinking block
  " 3 -> blinking underscore
  " Recent versions of xterm (282 or above) also support
  " 5 -> blinking vertical bar
  " 6 -> solid vertical bar
endif
