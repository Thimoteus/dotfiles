"package manager
set nocompatible
filetype off

call plug#begin('~/.nvim/plugged')

Plug 'gmarik/vundle'
Plug 'tpope/vim-surround'
Plug 'chriskempson/base16-vim'
Plug 'edkolev/tmuxline.vim'
Plug 'raichoo/purescript-vim'
Plug 'itchyny/lightline.vim'
Plug 'Twinside/vim-haskellConceal'
Plug 'airblade/vim-gitgutter'
Plug 'ap/vim-buftabline'
Plug 'Thimoteus/vim-slime'
Plug 'idris-hackers/idris-vim'

call plug#end()

"highlighting
syntax on
filetype plugin indent on

" POSIX compatibility
set shell=/bin/bash

" leader
" sets H, L to beginning, end of line
nnoremap H ^
nnoremap L $

" tab switching
nnoremap <Leader>[ :bp<cr>
nnoremap <Leader>] :bn<cr>
nnoremap <M-h> :bp<cr>
nnoremap <M-l> :bn<cr>

" copy+paste
vnoremap <c-x> "+x
vnoremap <c-c> "+y
vnoremap <c-p> "+p

"displays line numbers
set number

"shows which line the cursor is on
set cursorline

"lets you open new buffers without writing changes to old ones
set hidden

"tab settings
set tabstop=2
set shiftwidth=2
set expandtab

"colorscheme
let base16colorspace=256  " Access colors present in 256 colorspace
set background=dark
colorscheme base16-chalk

" Tab completion
function! Inserttabwrapper()
  let col = col('.') - 1
  if !col || getline('.')[col - 1] !~ '\k'
    return "\<tab>"
  else
    return "\<c-p>"
  endif
endfunction
" Map <tab> to Inserttabwarpper()
inoremap <tab> <c-r>=Inserttabwrapper()<cr>

" don't remember what this does
set laststatus=2

" annoying paste indent fix
set copyindent

" lightline stuff

let g:lightline = {
      \ 'colorscheme': 'jellybeans',
      \ 'component': {
      \   'readonly': '%{&readonly?"⭤":""}',
      \ },
      \ 'separator': { 'left': '⮀', 'right': '⮂' },
      \ 'subseparator': { 'left': '⮁', 'right': '⮃' }
      \ }

" visible line for wrapping
highlight ColorColumn ctermbg=236
set colorcolumn=120
hi CursorLine ctermbg=236 ctermfg=NONE guibg=#303030 guifg=NONE cterm=NONE gui=NONE

" makes split windows default to the right
set splitright

" disable highlighting search terms with space
:nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>

" syntax highlighting
au BufRead,BufNewFile *.sand set filetype=clojure

" vim-slime
let g:slime_target="tmux"

" tmuxline
"let g:tmuxline_powerline_separators = 0
let g:tmuxline_separators = {
    \ 'left' : '',
    \ 'left_alt': '>',
    \ 'right' : '',
    \ 'right_alt' : '<',
    \ 'space' : ' '}
let g:tmuxline_theme = {
    \   'a'    : [ 236, 103 ],
    \   'b'    : [ 253, 239 ],
    \   'c'    : [ 244, 236 ],
    \   'x'    : [ 244, 236 ],
    \   'y'    : [ 253, 239 ],
    \   'z'    : [ 236, 103 ],
    \   'win'  : [ 103, 236 ],
    \   'cwin' : [ 236, 103 ],
    \   'bg'   : [ 244, 236 ],
    \ }

" invisibles
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<
nnoremap <Leader>i :set list!<cr>

